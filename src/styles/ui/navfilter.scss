@use 'sass:color';
@use 'sass:map';

// ============================================================================
// SETTINGS - Design tokens and variables
// ============================================================================

$filter-transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
$filter-shadow-base: 0 2px 4px rgba(0, 0, 0, 0.05);
$filter-shadow-elevated: 0 4px 12px rgba(0, 0, 0, 0.1);

$filter-sizes: (
  small: (
    padding-x: 1rem,
    padding-y: 0.5rem,
    font-size: 0.75rem
  ),
  medium: (
    padding-x: 1.5rem,
    padding-y: 0.75rem,
    font-size: 0.875rem
  ),
  large: (
    padding-x: 2rem,
    padding-y: 1rem,
    font-size: 1rem
  )
);

// ============================================================================
// TOOLS - Mixins and functions
// ============================================================================

@mixin filter-transition {
  transition: $filter-transition;
}

@mixin filter-focus {
  &:focus-visible {
    outline: none;
    box-shadow:
      0 0 0 2px rgb(var(--color-background)),
      0 0 0 4px rgb(var(--color-primary) / 0.5);
  }
}

@mixin filter-base-button {
  @apply rounded-full font-medium cursor-pointer inline-flex items-center justify-center;
  @include filter-transition;
  @include filter-focus;

  border: 2px solid transparent;
  box-shadow: $filter-shadow-base;
}

@mixin filter-button-active {
  background-color: rgb(var(--color-primary));
  color: rgb(var(--color-textSecondary));
  border-color: rgb(var(--color-primary));
  box-shadow: $filter-shadow-elevated;
  transform: scale(1.02);

  &:hover:not(:disabled) {
    background-color: rgb(var(--color-primary) / 0.9);
    transform: scale(1.05);
  }
}

@mixin filter-button-inactive {
  background-color: rgb(var(--color-surface));
  color: rgb(var(--color-text));
  border-color: rgb(var(--color-surface));

  &:hover:not(:disabled) {
    background-color: rgb(var(--color-primary) / 0.1);
    color: rgb(var(--color-primary));
    border-color: rgb(var(--color-primary) / 0.3);
    transform: scale(1.02);
    box-shadow: $filter-shadow-elevated;
  }
}

@mixin filter-button-disabled {
  @apply opacity-50 cursor-not-allowed;
  transform: none !important;
}

@mixin filter-size($size-key) {
  $size-config: map.get($filter-sizes, $size-key);

  @if $size-config {
    padding-left: map.get($size-config, padding-x);
    padding-right: map.get($size-config, padding-x);
    padding-top: map.get($size-config, padding-y);
    padding-bottom: map.get($size-config, padding-y);
    font-size: map.get($size-config, font-size);
  }
}

// ============================================================================
// COMPONENTS - Main component styles
// ============================================================================

.nav-filter {
  @apply flex flex-wrap justify-center gap-3 mb-12;

  // ============================================================================
  // Button base styles
  // ============================================================================

  &__button {
    @include filter-base-button;
    @include filter-size(medium);
    @include filter-button-inactive;

    // Active state
    &--active {
      @include filter-button-active;
    }

    // Loading state
    &--loading {
      @apply relative;

      &::after {
        content: '';
        @apply absolute inset-0 rounded-full;
        background: rgba(255, 255, 255, 0.1);
        animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
      }
    }

    // Disabled state
    &:disabled {
      @include filter-button-disabled;
    }
  }

  // ============================================================================
  // Size modifiers
  // ============================================================================

  &--small &__button {
    @include filter-size(small);
  }

  &--large &__button {
    @include filter-size(large);
  }

  // ============================================================================
  // Layout modifiers
  // ============================================================================

  &--vertical {
    @apply flex-col items-center gap-2;
  }

  &--start {
    @apply justify-start;
  }

  &--end {
    @apply justify-end;
  }

  // ============================================================================
  // Responsive behavior - Mobile specific adjustments
  // ============================================================================

  @media (max-width: 480px) {
    @apply gap-2 mb-8;

    &__button {
      @include filter-size(small);
    }

    // Force horizontal layout on very small screens for better usability
    &--vertical {
      @apply flex-row flex-wrap;
    }
  }

  // ============================================================================
  // Tablet adjustments
  // ============================================================================

  @media (min-width: 481px) and (max-width: 768px) {
    @apply gap-2;
  }
}

// ============================================================================
// UTILITIES - Helper classes and overrides
// ============================================================================

// Animation keyframes for loading state
@keyframes pulse {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .nav-filter__button {
    border-width: 3px;

    &:focus-visible {
      outline: 3px solid rgb(var(--color-primary));
      outline-offset: 3px;
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .nav-filter__button {
    transition: none;

    &--loading::after {
      animation: none;
    }
  }
}
